.TH tracker-info 1 "Oct 2008" GNU "User Commands"

.SH NAME
tracker-info \- Retrieve all information available for a certain file.

.SH SYNOPSIS
\fBtracker-info\fR [\fIOPTION\fR...] \fIFILE\fR...

.SH DESCRIPTION
.B tracker-info
asks for all the known metadata available for the given \fIFILE\fR.

Multiple \fIFILE\fR arguments can be provided to retrieve information
about multiple files.

The \fIFILE\fR argument can be either a local path or a URI. It also
does not have to be an absolute path.

.SH OPTIONS
.TP
.B \-?, \-\-help
Show summary of options.
.TP
.B \-V, \-\-version
Print version.
.TP
.B \-f, \-\-full\-namespaces
By default, all keys and values reported about any given \fIFILE\fR
are returned in shortened form, for example, \fInie:title\fR is shown
instead of
\fIhttp://www.semanticdesktop.org/ontologies/2007/01/19/nie#title\fR.
This makes things much easier to see generally and the output is less
cluttered. This option reverses that so FULL namespaces are shown
instead.
.TP
.B \-c, \-\-plain\-text\-content
If the resource being displayed has nie:PlainTextContent (i.e.
information about the content of the resource, which could be the
contents of a file on the disk), then this option displays that in the
output.
.TP
.B \-i, \-\-resource-is-iri
In most cases, the \fIFILE\fR argument supplied points to a URL or
PATH which is queried for according to the resource associated with it
by \fInie:url\fR. However, in cases where the \fIFILE\fR specified
turns out to be the actual URN itself, this argument is required to
tell \fBtracker-info\fR not to do the extra step of looking up the URN
related by \fInie:url\fR.

For example, consider that you store URNs by the actual URL itself and
use the unique nie:url in another resource (which is quite reasonable
when using containers and multi-resource conditions), you would need
this argument to tell \fBtracker-info\fR that the \fIFILE\fR supplied
is actually a URN not URL.
.TP
.B \-t, \-\-turtle
Output results as Turtle RDF. If \-f is enabled, full URIs are shown
for subjects, predicates and objects; otherwise, shortened URIs are
used, and all the prefixes Tracker knows about are printed at the top
of the output.

.SH ENVIRONMENT
.TP
.B TRACKER_SPARQL_BACKEND
This option allows you to choose which backend you use for connecting
to the database. This choice can limit your functionality. There are
three settings.

With "\fBdirect\fR" the connection to the database is made directly to
the file itself on the disk, there is no intermediary daemon or
process. The "\fBdirect\fR" approach is purely \fIread-only\fR.

With "\fBbus\fR" the \fBtracker-store\fR process is used to liase with
the database queuing all requests and managing the connections via an
IPC / D-Bus. This adds a small overhead \fIBUT\fR this is the only
approach you can use if you want to \fIwrite\fR to the database.

With "\fBauto\fR" the backend is decided for you, much like it would
be if this environment variable was undefined.

.TP
.B TRACKER_PRAGMAS_FILE
Tracker has a fixed set of PRAGMA settings for creating its SQLite connection.
With this environment variable pointing to a text file you can override these
settings. The file is a \\n separated list of SQLite queries to execute on any
newly created SQLite connection in tracker-store.

.SH SEE ALSO
.BR tracker-store (1),
.BR tracker-sparql (1).
.TP
.BR http://nepomuk.semanticdesktop.org/
.TP
.BR http://www.w3.org/TR/rdf-sparql-query/
